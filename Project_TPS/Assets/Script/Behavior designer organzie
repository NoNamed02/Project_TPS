
    TaskStatus.Success: 조건이 만족되었을 때 반환.
    TaskStatus.Failure: 조건이 만족되지 않았을 때 반환.
    TaskStatus.Running: 조건이 아직 완료되지 않았고, 계속 실행 중일 때 반환.

    노드 정보

    1. Composite 노드
    Selector: 여러 자식 노드 중 하나가 Success를 반환하면 성공으로 처리하고, 나머지 자식 노드는 실행되지 않습니다. 일반적으로 조건을 평가할 때 사용됩니다.
    Sequence: 자식 노드를 순서대로 실행하고, 모든 자식 노드가 Success를 반환해야 성공으로 처리합니다. 하나라도 Failure를 반환하면 실패로 처리됩니다.
    Parallel: 모든 자식 노드를 동시에 실행하며, 지정된 조건을 만족하면 성공 또는 실패를 반환합니다. 보통 여러 행동을 동시에 수행할 때 사용합니다.

    2. Decorator 노드
    Invert: 자식 노드의 성공 및 실패 상태를 반전시킵니다. 즉, 자식 노드가 성공하면 실패를 반환하고, 실패하면 성공을 반환합니다.
    Repeater: 자식 노드를 반복 실행합니다. 자식 노드가 성공하거나 실패할 때까지 계속 실행합니다.
    Limiter: 자식 노드를 지정된 횟수만큼만 실행합니다.

    3. Action 노드
    행동을 수행하는 노드입니다. 일반적으로 특정 작업을 수행하고 Success, Failure, 또는 Running 상태를 반환합니다. 예를 들어, 이동, 공격, 또는 다른 행동을 수행하는 태스크입니다.

    4. Conditional 노드
    조건을 평가하는 노드입니다. 조건이 만족되면 Success를 반환하고, 그렇지 않으면 Failure를 반환합니다. 일반적으로 AI의 상태를 평가하는 데 사용됩니다.

    5. Custom 노드
    사용자가 정의한 특별한 동작이나 조건을 수행하는 노드입니다. C# 코드로 작성되어 Behavior Designer의 UI에 통합될 수 있습니다.
    
    6. Utility 노드
    자주 사용되는 유틸리티 함수나 상태를 나타내는 노드로, 행동 트리의 다른 노드에서 참조할 수 있습니다.

    요약
    Composite 노드는 여러 자식 노드를 관리하며, 어떤 조건에 따라 선택하거나 순차적으로 실행합니다.
    Decorator 노드는 다른 노드의 행동을 변경하거나 반복합니다.
    Action 노드는 특정 작업을 수행하고 결과를 반환합니다.
    Conditional 노드는 조건을 평가하여 성공 또는 실패를 반환합니다.